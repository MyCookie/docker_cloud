version: '3'

services:

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    hostname: nignx
    networks:
      nextcloud:
        aliases:
          - nginx
    restart: always
    depends_on:
      - certbot
      - nextcloud
      - phpmyadmin
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
      - "9090:9090" # phpmyadmin
    volumes:
      - /data/docker/volumes/nginx/etc/nginx/conf.d:/etc/nginx/conf.d
      - /data/docker/volumes/certbot/etc/letsencrypt:/etc/letsencrypt
      - /data/docker/volumes/certbot/var/www/certbot:/var/www/certbot

  certbot:
    image: certbot/certbot:arm64v8-latest
    container_name: certbot
    hostname: certbot
    restart: always
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - /data/docker/volumes/certbot/etc/letsencrypt:/etc/letsencrypt
      - /data/docker/volumes/certbot/var/www/certbot:/var/www/certbot

  mariadb:
    image: mariadb
    container_name: mariadb # only available when deploying using docker-compose
    hostname: mariadb
    networks:
      nextcloud:
        aliases:
          - mariadb
          - db
          - mysql
          - mysqldb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=wow_secure_pass
    volumes:
      - /data/docker/volumes/mariadb/var/lib/mysql:/var/lib/mysql
    
  redis:
    image: redis
    container_name: redis
    hostname: redis
    networks:
      nextcloud:
        aliases:
          - redis
    restart: unless-stopped
  
  server:
    image: nextcloud:production # production = stable - 1
    container_name: nextcloud # only available when deploying using docker-compose
    hostname: nextcloud
    networks:
      nextcloud:
        aliases:
          - nextcloud
    restart: unless-stopped
    depends_on:
      - mariadb
      - redis
    environment:
      - MYSQL_HOST=mariadb
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=wow_secure_pass
      - MYSQL_DATABASE=nextcloud
      - REDIS_HOST=redis
    volumes:
      - /data/docker/volumes/nextcloud/var/www/html:/var/www/html

  adminer:
    image: adminer
    container_name: adminer
    hostname: adminer
    networks:
      nextcloud:
        aliases:
          - adminer
    restart: unless-stopped
    depends_on:
      - mariadb
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
    volumes:
      - /data/docker/volumes/adminer/var/www/html/adminer.css:/var/www/html/adminer.css

networks:
  nextcloud:
