version: '3'

services:
    watchtower:
        image: containrrr/watchtower
        container_name: watchtower
        hostname: watchtower
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        hostname: nignx
        restart: always
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /data/srv/var/docker/volumes/nginx/etc/nginx/conf.d:/etc/nginx/conf.d
            - /data/srv/var/docker/volumes/certbot/etc/letsencrypt:/etc/letsencrypt
            - /data/srv/var/docker/volumes/certbot/var/www/certbot:/var/www/certbot
    certbot:
        image: certbot/certbot
        container_name: certbot
        hostname: certbot
        restart: always
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        volumes:
            - /data/srv/var/docker/volumes/certbot/etc/letsencrypt:/etc/letsencrypt
            - /data/srv/var/docker/volumes/certbot/var/www/certbot:/var/www/certbot
    gitea:
        image: gitea/gitea:latest
        container_name: gitea
        hostname: gitea
        restart: unless-stopped
        environment:
            - USER_UID=1000
            - USER_GID=1000
        restart: unless-stopped
        volumes:
            - /data/srv/var/docker/volumes/gitea/data:/data
    thelounge:
        image: thelounge/thelounge:latest
        container_name: thelounge
        hostname: thelounge
        restart: unless-stopped
        volumes:
            - /data/srv/var/docker/volumes/thelounge/var/opt/thelounge:/var/opt/thelounge
    express_server:
        build: express_server
        container_name: express_server
        hostname: express_server
        restart: always
        ports:
            - "80:80"

networks:
    default:
        external:
            name: dockercloud
