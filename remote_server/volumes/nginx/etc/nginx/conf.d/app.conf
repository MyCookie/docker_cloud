# https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71

server {
    listen 80;
    server_name domain.tld;
    location / {
        return 301 https://$server_name$request_uri;
    }

    location /.well-known/acme-challenge {
        root /var/www/certbot;
    }
}

# the express server
server {
    listen 443 ssl;
    server_name domain.tld;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf
 
    location / {
        proxy_pass http://express_server:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
    }

    location /.well-known/matrix/client { # matrix client well-known uri
        return 200 '{"m.homeserver": {"base_url": "https://matrix.domain.tld"}}';
        default_type application/json;
        add_header Access-Control-Allow-Origin *;
    }
}

# the lounge
server {
    listen 443 ssl;
    server_name irc.domain.tld;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf

    location / {
        proxy_pass http://thelounge:9000/;
        proxy_http_version 1.1;
        proxy_set_header Connection "upgrade";
   	    proxy_set_header Upgrade $http_upgrade;
       	proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;

    	# by default nginx times out connections in one minute
        proxy_read_timeout 1d;
    }
}

# redirect git to gitea
server {
    listen 443 ssl;
    server_name git.domain.tld;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf

    location / {
        return 301 https://gitea.domain.tld/;
    }
}

# gitea
server {
    listen 443 ssl;
    server_name gitea.domain.tld;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf

    location / {
        proxy_pass http://gitea:3000/;
    }
}

# redirect cloud to nextcloud
server {
    listen 443 ssl;
    server_name cloud.domain.tld;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf

    location / {
        return 301 https://nextcloud.domain.tld/;
    }
}

# nextcloud
server {
    listen 443 ssl;
    server_name nextcloud.domain.tld;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf

    location / {
        proxy_pass http://nextcloud/;
    }
}

# redirect chat to element
server {
    listen 443 ssl;
    server_name chat.domain.tld;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf

    location / {
        return 301 https://element.domain.tld/;
    }
}

# element
server {
    listen 443 ssl;
    server_name element.domain.tld;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf;

    location / {
        proxy_pass http://element/;

        # as directed by: https://github.com/vector-im/element-web#configuration-best-practices
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Content-Security-Policy "frame-ancestors 'none'";
    }
}

# matrix
# https://github.com/matrix-org/synapse/blob/master/docs/reverse_proxy.md
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # For the federation port
    listen 8448 ssl http2 default_server;
    listen [::]:8448 ssl http2 default_server;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    include conf.d/ssl.conf;

    server_name matrix.domain.tld;

    location ~* ^(\/_matrix|\/_synapse\/client) {
        proxy_pass http://synapse:8008;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;

        # Nginx by default only allows file uploads up to 1M in size
        # Increase client_max_body_size to match max_upload_size defined in homeserver.yaml
        client_max_body_size 50M;
    }
}

